class SubredditListChild {
  final Object user_flair_background_color;
  final Object submit_text_html;
  final bool restrict_posting;
  final bool user_is_banned;
  final bool free_form_reports;
  final bool wiki_enabled;
  final bool user_is_muted;
  final Object user_can_flair_in_sr;
  final String display_name;
  final String header_img;
  final String title;
  final Object icon_size;
  final String primary_color;
  final Object active_user_count;
  final String icon_img;
  final String display_name_prefixed;
  final Object accounts_active;
  final bool public_traffic;
  final int subscribers;
  final List<Object> user_flair_richtext;
  final int videostream_links_count;
  final String name;
  final bool quarantine;
  final bool hide_ads;
  final bool emojis_enabled;
  final String advertiser_category;
  final String public_description;
  final int comment_score_hide_mins;
  final bool user_has_favorited;
  final Object user_flair_template_id;
  final String community_icon;
  final String banner_background_image;
  final bool original_content_tag_enabled;
  final String submit_text;
  final String description_html;
  final bool spoilers_enabled;
  final Object header_title;
  final List<dynamic> header_size;
  final String user_flair_position;
  final bool all_original_content;
  final bool has_menu_widget;
  final Object is_enrolled_in_new_modmail;
  final String key_color;
  final bool can_assign_user_flair;
  final double created;
  final int wls;
  final bool show_media_preview;
  final String submission_type;
  final bool user_is_subscriber;
  final bool disable_contributor_requests;
  final bool allow_videogifs;
  final String user_flair_type;
  final bool collapse_deleted_comments;
  final Object emojis_custom_size;
  final String public_description_html;
  final bool allow_videos;
  final bool is_crosspostable_subreddit;
  final String notification_level;
  final bool can_assign_link_flair;
  final bool accounts_active_is_fuzzed;
  final Object submit_text_label;
  final String link_flair_position;
  final Object user_sr_flair_enabled;
  final bool user_flair_enabled_in_sr;
  final bool allow_discovery;
  final bool user_sr_theme_enabled;
  final bool link_flair_enabled;
  final String subreddit_type;
  final Object suggested_comment_sort;
  final String banner_img;
  final Object user_flair_text;
  final String banner_background_color;
  final bool show_media;
  final String id;
  final bool user_is_moderator;
  final bool over18;
  final String description;
  final Object submit_link_label;
  final Object user_flair_text_color;
  final bool restrict_commenting;
  final Object user_flair_css_class;
  final bool allow_images;
  final String lang;
  final String whitelist_status;
  final String url;
  final double created_utc;
  final Object banner_size;
  final String mobile_banner_image;
  final bool user_is_contributor;

  SubredditListChild.fromJsonMap(Map<String, dynamic> map)
      : user_flair_background_color = map["user_flair_background_color"],
        submit_text_html = map["submit_text_html"],
        restrict_posting = map["restrict_posting"],
        user_is_banned = map["user_is_banned"],
        free_form_reports = map["free_form_reports"],
        wiki_enabled = map["wiki_enabled"],
        user_is_muted = map["user_is_muted"],
        user_can_flair_in_sr = map["user_can_flair_in_sr"],
        display_name = map["display_name"],
        header_img = map["header_img"],
        title = map["title"],
        icon_size = map["icon_size"],
        primary_color = map["primary_color"],
        active_user_count = map["active_user_count"],
        icon_img = map["icon_img"],
        display_name_prefixed = map["display_name_prefixed"],
        accounts_active = map["accounts_active"],
        public_traffic = map["public_traffic"],
        subscribers = map["subscribers"],
        user_flair_richtext = map["user_flair_richtext"],
        videostream_links_count = map["videostream_links_count"],
        name = map["name"],
        quarantine = map["quarantine"],
        hide_ads = map["hide_ads"],
        emojis_enabled = map["emojis_enabled"],
        advertiser_category = map["advertiser_category"],
        public_description = map["public_description"],
        comment_score_hide_mins = map["comment_score_hide_mins"],
        user_has_favorited = map["user_has_favorited"],
        user_flair_template_id = map["user_flair_template_id"],
        community_icon = map["community_icon"],
        banner_background_image = map["banner_background_image"],
        original_content_tag_enabled = map["original_content_tag_enabled"],
        submit_text = map["submit_text"],
        description_html = map["description_html"],
        spoilers_enabled = map["spoilers_enabled"],
        header_title = map["header_title"],
        header_size = map["header_size"] != null
            ? List<dynamic>.from(map["header_size"])
            : null,
        user_flair_position = map["user_flair_position"],
        all_original_content = map["all_original_content"],
        has_menu_widget = map["has_menu_widget"],
        is_enrolled_in_new_modmail = map["is_enrolled_in_new_modmail"],
        key_color = map["key_color"],
        can_assign_user_flair = map["can_assign_user_flair"],
        created = map["created"],
        wls = map["wls"],
        show_media_preview = map["show_media_preview"],
        submission_type = map["submission_type"],
        user_is_subscriber = map["user_is_subscriber"],
        disable_contributor_requests = map["disable_contributor_requests"],
        allow_videogifs = map["allow_videogifs"],
        user_flair_type = map["user_flair_type"],
        collapse_deleted_comments = map["collapse_deleted_comments"],
        emojis_custom_size = map["emojis_custom_size"],
        public_description_html = map["public_description_html"],
        allow_videos = map["allow_videos"],
        is_crosspostable_subreddit = map["is_crosspostable_subreddit"],
        notification_level = map["notification_level"],
        can_assign_link_flair = map["can_assign_link_flair"],
        accounts_active_is_fuzzed = map["accounts_active_is_fuzzed"],
        submit_text_label = map["submit_text_label"],
        link_flair_position = map["link_flair_position"],
        user_sr_flair_enabled = map["user_sr_flair_enabled"],
        user_flair_enabled_in_sr = map["user_flair_enabled_in_sr"],
        allow_discovery = map["allow_discovery"],
        user_sr_theme_enabled = map["user_sr_theme_enabled"],
        link_flair_enabled = map["link_flair_enabled"],
        subreddit_type = map["subreddit_type"],
        suggested_comment_sort = map["suggested_comment_sort"],
        banner_img = map["banner_img"],
        user_flair_text = map["user_flair_text"],
        banner_background_color = map["banner_background_color"],
        show_media = map["show_media"],
        id = map["id"],
        user_is_moderator = map["user_is_moderator"],
        over18 = map["over18"],
        description = map["description"],
        submit_link_label = map["submit_link_label"],
        user_flair_text_color = map["user_flair_text_color"],
        restrict_commenting = map["restrict_commenting"],
        user_flair_css_class = map["user_flair_css_class"],
        allow_images = map["allow_images"],
        lang = map["lang"],
        whitelist_status = map["whitelist_status"],
        url = map["url"],
        created_utc = map["created_utc"],
        banner_size = map["banner_size"],
        mobile_banner_image = map["mobile_banner_image"],
        user_is_contributor = map["user_is_contributor"];

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['user_flair_background_color'] = user_flair_background_color;
    data['submit_text_html'] = submit_text_html;
    data['restrict_posting'] = restrict_posting;
    data['user_is_banned'] = user_is_banned;
    data['free_form_reports'] = free_form_reports;
    data['wiki_enabled'] = wiki_enabled;
    data['user_is_muted'] = user_is_muted;
    data['user_can_flair_in_sr'] = user_can_flair_in_sr;
    data['display_name'] = display_name;
    data['header_img'] = header_img;
    data['title'] = title;
    data['icon_size'] = icon_size;
    data['primary_color'] = primary_color;
    data['active_user_count'] = active_user_count;
    data['icon_img'] = icon_img;
    data['display_name_prefixed'] = display_name_prefixed;
    data['accounts_active'] = accounts_active;
    data['public_traffic'] = public_traffic;
    data['subscribers'] = subscribers;
    data['user_flair_richtext'] = user_flair_richtext;
    data['videostream_links_count'] = videostream_links_count;
    data['name'] = name;
    data['quarantine'] = quarantine;
    data['hide_ads'] = hide_ads;
    data['emojis_enabled'] = emojis_enabled;
    data['advertiser_category'] = advertiser_category;
    data['public_description'] = public_description;
    data['comment_score_hide_mins'] = comment_score_hide_mins;
    data['user_has_favorited'] = user_has_favorited;
    data['user_flair_template_id'] = user_flair_template_id;
    data['community_icon'] = community_icon;
    data['banner_background_image'] = banner_background_image;
    data['original_content_tag_enabled'] = original_content_tag_enabled;
    data['submit_text'] = submit_text;
    data['description_html'] = description_html;
    data['spoilers_enabled'] = spoilers_enabled;
    data['header_title'] = header_title;
    data['header_size'] = header_size;
    data['user_flair_position'] = user_flair_position;
    data['all_original_content'] = all_original_content;
    data['has_menu_widget'] = has_menu_widget;
    data['is_enrolled_in_new_modmail'] = is_enrolled_in_new_modmail;
    data['key_color'] = key_color;
    data['can_assign_user_flair'] = can_assign_user_flair;
    data['created'] = created;
    data['wls'] = wls;
    data['show_media_preview'] = show_media_preview;
    data['submission_type'] = submission_type;
    data['user_is_subscriber'] = user_is_subscriber;
    data['disable_contributor_requests'] = disable_contributor_requests;
    data['allow_videogifs'] = allow_videogifs;
    data['user_flair_type'] = user_flair_type;
    data['collapse_deleted_comments'] = collapse_deleted_comments;
    data['emojis_custom_size'] = emojis_custom_size;
    data['public_description_html'] = public_description_html;
    data['allow_videos'] = allow_videos;
    data['is_crosspostable_subreddit'] = is_crosspostable_subreddit;
    data['notification_level'] = notification_level;
    data['can_assign_link_flair'] = can_assign_link_flair;
    data['accounts_active_is_fuzzed'] = accounts_active_is_fuzzed;
    data['submit_text_label'] = submit_text_label;
    data['link_flair_position'] = link_flair_position;
    data['user_sr_flair_enabled'] = user_sr_flair_enabled;
    data['user_flair_enabled_in_sr'] = user_flair_enabled_in_sr;
    data['allow_discovery'] = allow_discovery;
    data['user_sr_theme_enabled'] = user_sr_theme_enabled;
    data['link_flair_enabled'] = link_flair_enabled;
    data['subreddit_type'] = subreddit_type;
    data['suggested_comment_sort'] = suggested_comment_sort;
    data['banner_img'] = banner_img;
    data['user_flair_text'] = user_flair_text;
    data['banner_background_color'] = banner_background_color;
    data['show_media'] = show_media;
    data['id'] = id;
    data['user_is_moderator'] = user_is_moderator;
    data['over18'] = over18;
    data['description'] = description;
    data['submit_link_label'] = submit_link_label;
    data['user_flair_text_color'] = user_flair_text_color;
    data['restrict_commenting'] = restrict_commenting;
    data['user_flair_css_class'] = user_flair_css_class;
    data['allow_images'] = allow_images;
    data['lang'] = lang;
    data['whitelist_status'] = whitelist_status;
    data['url'] = url;
    data['created_utc'] = created_utc;
    data['banner_size'] = banner_size;
    data['mobile_banner_image'] = mobile_banner_image;
    data['user_is_contributor'] = user_is_contributor;
    return data;
  }
}
