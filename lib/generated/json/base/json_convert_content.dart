// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:fritter_for_reddit/generated/json/search_posts_repo_entity_entity_helper.dart';
import 'package:fritter_for_reddit/generated/json/search_subreddits_repo_entity_helper.dart';
import 'package:fritter_for_reddit/models/search_results/posts/search_posts_repo_entity_entity.dart';
import 'package:fritter_for_reddit/models/search_results/subreddits/search_subreddits_repo_entity.dart';

class JsonConvert<T> {
  T fromJson(Map<String, dynamic> json) {
    return _getFromJson<T>(runtimeType, this, json);
  }

  Map<String, dynamic> toJson() {
    return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {
      case SearchPostsRepoEntity:
        return searchPostsRepoEntityFromJson(
            data as SearchPostsRepoEntity, json) as T;
      case SearchPostsRepoEntityData:
        return searchPostsRepoEntityDataFromJson(
            data as SearchPostsRepoEntityData, json) as T;
      case SearchPostsRepoEntityDataFacets:
        return searchPostsRepoEntityDataFacetsFromJson(
            data as SearchPostsRepoEntityDataFacets, json) as T;
      case SearchPostsRepoEntityDatachild:
        return searchPostsRepoEntityDatachildFromJson(
            data as SearchPostsRepoEntityDatachild, json) as T;
      case SearchPostsRepoEntityDataChildrenData:
        return searchPostsRepoEntityDataChildrenDataFromJson(
            data as SearchPostsRepoEntityDataChildrenData, json) as T;
      case SearchPostsRepoEntityDataChildrenDataMediaEmbed:
        return searchPostsRepoEntityDataChildrenDataMediaEmbedFromJson(
            data as SearchPostsRepoEntityDataChildrenDataMediaEmbed, json) as T;
      case SearchPostsRepoEntityDataChildrenDataSecureMediaEmbed:
        return searchPostsRepoEntityDataChildrenDataSecureMediaEmbedFromJson(
            data as SearchPostsRepoEntityDataChildrenDataSecureMediaEmbed,
            json) as T;
      case SearchPostsRepoEntityDataChildrenDataGildings:
        return searchPostsRepoEntityDataChildrenDataGildingsFromJson(
            data as SearchPostsRepoEntityDataChildrenDataGildings, json) as T;
      case SearchPostsRepoEntityDataChildrenDataPreview:
        return searchPostsRepoEntityDataChildrenDataPreviewFromJson(
            data as SearchPostsRepoEntityDataChildrenDataPreview, json) as T;
      case SearchPostsRepoEntityDatachildDataPreviewImages:
        return searchPostsRepoEntityDatachildDataPreviewImagesFromJson(
            data as SearchPostsRepoEntityDatachildDataPreviewImages, json) as T;
      case SearchPostsRepoEntityDataChildrenDataPreviewImagesSource:
        return searchPostsRepoEntityDataChildrenDataPreviewImagesSourceFromJson(
            data as SearchPostsRepoEntityDataChildrenDataPreviewImagesSource,
            json) as T;
      case SearchPostsRepoEntityDatachildDataPreviewImagesResolutions:
        return searchPostsRepoEntityDatachildDataPreviewImagesResolutionsFromJson(
            data as SearchPostsRepoEntityDatachildDataPreviewImagesResolutions,
            json) as T;
      case SearchPostsRepoEntityDataChildrenDataPreviewImagesVariants:
        return searchPostsRepoEntityDataChildrenDataPreviewImagesVariantsFromJson(
            data as SearchPostsRepoEntityDataChildrenDataPreviewImagesVariants,
            json) as T;
      case SearchSubredditsRepoEntity:
        return searchSubredditsRepoEntityFromJson(
            data as SearchSubredditsRepoEntity, json) as T;
      case SearchSubredditsRepoSubreddit:
        return searchSubredditsRepoSubredditFromJson(
            data as SearchSubredditsRepoSubreddit, json) as T;
    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
    switch (type) {
      case SearchPostsRepoEntity:
        return searchPostsRepoEntityToJson(data as SearchPostsRepoEntity);
      case SearchPostsRepoEntityData:
        return searchPostsRepoEntityDataToJson(
            data as SearchPostsRepoEntityData);
      case SearchPostsRepoEntityDataFacets:
        return searchPostsRepoEntityDataFacetsToJson(
            data as SearchPostsRepoEntityDataFacets);
      case SearchPostsRepoEntityDatachild:
        return searchPostsRepoEntityDatachildToJson(
            data as SearchPostsRepoEntityDatachild);
      case SearchPostsRepoEntityDataChildrenData:
        return searchPostsRepoEntityDataChildrenDataToJson(
            data as SearchPostsRepoEntityDataChildrenData);
      case SearchPostsRepoEntityDataChildrenDataMediaEmbed:
        return searchPostsRepoEntityDataChildrenDataMediaEmbedToJson(
            data as SearchPostsRepoEntityDataChildrenDataMediaEmbed);
      case SearchPostsRepoEntityDataChildrenDataSecureMediaEmbed:
        return searchPostsRepoEntityDataChildrenDataSecureMediaEmbedToJson(
            data as SearchPostsRepoEntityDataChildrenDataSecureMediaEmbed);
      case SearchPostsRepoEntityDataChildrenDataGildings:
        return searchPostsRepoEntityDataChildrenDataGildingsToJson(
            data as SearchPostsRepoEntityDataChildrenDataGildings);
      case SearchPostsRepoEntityDataChildrenDataPreview:
        return searchPostsRepoEntityDataChildrenDataPreviewToJson(
            data as SearchPostsRepoEntityDataChildrenDataPreview);
      case SearchPostsRepoEntityDatachildDataPreviewImages:
        return searchPostsRepoEntityDatachildDataPreviewImagesToJson(
            data as SearchPostsRepoEntityDatachildDataPreviewImages);
      case SearchPostsRepoEntityDataChildrenDataPreviewImagesSource:
        return searchPostsRepoEntityDataChildrenDataPreviewImagesSourceToJson(
            data as SearchPostsRepoEntityDataChildrenDataPreviewImagesSource);
      case SearchPostsRepoEntityDatachildDataPreviewImagesResolutions:
        return searchPostsRepoEntityDatachildDataPreviewImagesResolutionsToJson(
            data as SearchPostsRepoEntityDatachildDataPreviewImagesResolutions);
      case SearchPostsRepoEntityDataChildrenDataPreviewImagesVariants:
        return searchPostsRepoEntityDataChildrenDataPreviewImagesVariantsToJson(
            data as SearchPostsRepoEntityDataChildrenDataPreviewImagesVariants);
      case SearchSubredditsRepoEntity:
        return searchSubredditsRepoEntityToJson(
            data as SearchSubredditsRepoEntity);
      case SearchSubredditsRepoSubreddit:
        return searchSubredditsRepoSubredditToJson(
            data as SearchSubredditsRepoSubreddit);
    }
    return data as T;
  }

  static T fromJsonAsT<T>(json) {
    switch (T.toString()) {
      case 'SearchPostsRepoEntity':
        return SearchPostsRepoEntity().fromJson(json) as T;
      case 'SearchPostsRepoEntityData':
        return SearchPostsRepoEntityData().fromJson(json) as T;
      case 'SearchPostsRepoEntityDataFacets':
        return SearchPostsRepoEntityDataFacets().fromJson(json) as T;
      case 'SearchPostsRepoEntityDatachild':
        return SearchPostsRepoEntityDatachild().fromJson(json) as T;
      case 'SearchPostsRepoEntityDataChildrenData':
        return SearchPostsRepoEntityDataChildrenData().fromJson(json) as T;
      case 'SearchPostsRepoEntityDataChildrenDataMediaEmbed':
        return SearchPostsRepoEntityDataChildrenDataMediaEmbed().fromJson(json)
            as T;
      case 'SearchPostsRepoEntityDataChildrenDataSecureMediaEmbed':
        return SearchPostsRepoEntityDataChildrenDataSecureMediaEmbed()
            .fromJson(json) as T;
      case 'SearchPostsRepoEntityDataChildrenDataGildings':
        return SearchPostsRepoEntityDataChildrenDataGildings().fromJson(json)
            as T;
      case 'SearchPostsRepoEntityDataChildrenDataPreview':
        return SearchPostsRepoEntityDataChildrenDataPreview().fromJson(json)
            as T;
      case 'SearchPostsRepoEntityDatachildDataPreviewImages':
        return SearchPostsRepoEntityDatachildDataPreviewImages().fromJson(json)
            as T;
      case 'SearchPostsRepoEntityDataChildrenDataPreviewImagesSource':
        return SearchPostsRepoEntityDataChildrenDataPreviewImagesSource()
            .fromJson(json) as T;
      case 'SearchPostsRepoEntityDatachildDataPreviewImagesResolutions':
        return SearchPostsRepoEntityDatachildDataPreviewImagesResolutions()
            .fromJson(json) as T;
      case 'SearchPostsRepoEntityDataChildrenDataPreviewImagesVariants':
        return SearchPostsRepoEntityDataChildrenDataPreviewImagesVariants()
            .fromJson(json) as T;
      case 'SearchSubredditsRepoEntity':
        return SearchSubredditsRepoEntity().fromJson(json) as T;
      case 'SearchSubredditsRepoSubreddit':
        return SearchSubredditsRepoSubreddit().fromJson(json) as T;
    }
    return null;
  }
}
